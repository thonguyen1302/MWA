Tan Tho Nguyen - 986205

1. Explain why do we want sometimes to use setImmediate instead of using setTimeout?
setTimeout is simply like calling the function after delay has finished. Whenever a function is called it is not executed immediately, but queued so that it is executed after all the executing and currently queued eventhandlers finish first. setTimeout(,0) essentially means execute after all current functions in the present queue get executed. No guarantees can be made about how long it could take.
setImmediate is similar in this regard except that it doesn't use queue of functions. It checks queue of I/O eventhandlers. If all I/O events in the current snapshot are processed, it executes the callback. It queues them immedieately after the last I/O handler somewhat like process.nextTick. So it is faster.

2. Explain the difference between process.nextTick and setImmediate?
Use setImmediate if you want to queue the function behind whatever I/O event callbacks that are already in the event queue. Use process.nextTick to effectively queue the function at the head of the event queue so that it executes immediately after the current function completes.

3. Name 10 global modules available in Node environment
•  clearImmediate(immediateObject) 
•  clearInterval(intervalObject) 
•  clearTimeout(timeoutObject) 
•  console 
•  exports 
•  global 
•  module 
•  process 
•  require() 
•  setImmediate(callback[, ...args]) 
•  setInterval(callback, delay[, ...args]) 
•  setTimeout(callback, delay[, ...args])
